Best Free models from Open Router :-

=================================================================================================
|                                    |                  |               Accuracy                |
|            Model                   |      Time        |---------------------------------------|
|                                    |                  | Code Gen |  Info  |  NL → Structured  |
=================================================================================================
| deepseek/deepseek-r1-0528:free     | 39.8335 seconds  |  90%     |  91%   |       86%         |
| moonshotai/kimi-k2:free            | 22.1786 seconds  |  83%     |  84%   |       83%         |
| mistralai/mistral-7b-instruct:free | 4.7398 seconds   |  87%     |  90%   |       91%         |
| qwen/qwen3-coder:free              | 14.0573 seconds  |  92%     |  88%   |       88%         |
| openrouter/horizon-alpha (NA)      | 4.5481 seconds   |  ***     |  ***   |       ***         |
| openai/gpt-oss-20b:free            | 8.8346 seconds   |  88%     |  90%   |       87%         |
=================================================================================================

NA = Not Available currently
'***' means, Till now no reviews by public (new model), but its very accurate than others (as per chatgpt)

Tokens :-
=================================================================
| Model                          | Context | Input  | Output    |
=================================================================
| deepseek-r1-0528:free          |  128K    | ~110K  | ~8K–16K  |
| kimi-k2:free                   |   64K*   | ~60K   | ~4K–6K   |
| mistral-7b-instruct:free       |   32K    | ~30K   | ~2K–4K   |
| qwen3-coder:free               |  256K    | ~240K+ | ~20K+    |
| openrouter/horizon-alpha       |  256K    | ~240K+ | ~20K+    |
| openai/gpt-oss-20b:free        | ~128K    | ~120K  | ~8K–11K  |
=================================================================

'*' means Approximate estimate (not officially confirmed)

Note :-
- openrouter/horizon-alpha - this is not given as :free, but as per now its not taking any paid(it's free) 
- Time is calculated for a basic response of :-
-- What is the meaning of life?
-- Select which is required for you. Don't trust that 'compulsory in that time only it gives any response'.
