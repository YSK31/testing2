# This file is for testing multiple models with a single prompt for analysing their performance

import requests
import json
import time
import pandas as pd

# List of models to test
models = [
    "deepseek/deepseek-r1-0528:free",
    "moonshotai/kimi-k2:free",
    "mistralai/mistral-7b-instruct:free",
    "qwen/qwen3-coder:free",
    "openai/gpt-oss-20b:free"
]


# Store timings
results = []

# Prompt to send
prompt = """What is summary : Summarize the following text into a single clear paragraph that captures all essential information accurately and concisely. Avoid repetition. Do not include explanations, comments, or formatting — return only the summary.

Text: In recent years, the rise of artificial intelligence has significantly transformed industries such as healthcare, finance, education, and transportation. AI-powered tools are helping doctors diagnose diseases earlier, enabling banks to detect fraud in real-time, and supporting personalized learning for students. Meanwhile, autonomous vehicles are being tested in cities around the world, showing promise in reducing traffic accidents and increasing mobility for those unable to drive. Despite these advancements, concerns remain over data privacy, job displacement, and ethical decision-making by AI systems. Policymakers, technologists, and society at large are grappling with how to ensure AI is developed and deployed responsibly, balancing innovation with oversight and accountability.
"""




# API key
apikey = "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"

# Run test for each model
for model in models:
    start = time.time()

    response = requests.post(
        url="https://openrouter.ai/api/v1/chat/completions",
        headers={
            "Authorization": f"Bearer {apikey}",
            "Content-Type": "application/json",
        },
        data=json.dumps({
            "model": model,
            "messages": [
                {
                    "role": "user",
                    "content": prompt
                }
            ]
        })
    )

    elapsed = time.time() - start
    # print(response)
    try:
        content = response.json()
    except Exception as e:
        content = f"Error: {str(e)}"
    
    print(f"\n---------------\n---------------\n{model} (executed in {elapsed:.3f} seconds):\n{content}")
    results.append({"Model": model, "Time (in seconds)": round(elapsed, 3)})

# Create a clean DataFrame
df = pd.DataFrame(results)
print("\n\n===== Execution Time Summary =====")
print(df.to_string(index=False))
